---
- hosts: all
  become: true
  vars:
    created_username: alex
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1
    graf_container_name: grafana
    graf_container_image: grafana/grafana
    graf_container_command: started
    graf_container_ports: "3000:3000"
    graf_container_restart: yes
    graf_container_recreate: yes
    graf_container_state: present

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true
          

    - name: Update and install packages
      apt:
        pkg:
          - curl
          - vim
          - git
          - ufw
          - neovim
          - nginx  
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Update apt and install docker-ce
      apt:
        name: docker-compose
        state: latest
        update_cache: true

    - name: get git repo
      git:
        repo: https://github.com/stefanprodan/dockprom.git
        dest: /home/alex/git/

    - name: Start docker compose for grafana
      community.docker.docker_compose:
        project_src: /home/alex/git
        build: false
      register: output

          #- name: Pull default Docker image
          #community.docker.docker_image:
          #name: "{{ default_container_image }}"
          #source: pull

          #- name: Create graf containers
          #community.docker.docker_container:
          #name: "{{ graf_container_name }}"
          #image: "{{ graf_container_image }}"
          #command: "{{ graf_container_command }}"
          #ports: 
          #- "3000:3000"
          #restart: "{{ graf_container_restart }}"
          #state: "{{ graf_container_state }}"
          #recreate: "{{ graf_container_recreate }}"
